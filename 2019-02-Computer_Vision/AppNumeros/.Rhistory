library(shiny)
?runExample
system.file("examples", package="shiny")
runExample()
library(shiny); runApp('Documentos/HdD/Curso VyA/AppNumeros/AppMNIST.R')
runApp('Documentos/HdD/Curso VyA/AppNumeros/AppMNIST.R')
runApp('Documentos/HdD/Curso VyA/AppNumeros/AppMNIST.R')
runApp('Documentos/HdD/Curso VyA/AppNumeros/AppMNIST.R')
runApp('Documentos/HdD/Curso VyA/AppNumeros/AppMNIST.R')
runApp('Documentos/HdD/Curso VyA/AppNumeros/AppMNIST.R')
?box
runApp('Documentos/HdD/Curso VyA/AppNumeros/AppMNIST.R')
runApp('Documentos/HdD/Curso VyA/AppNumeros/AppMNIST.R')
prediccionNB <- 1
prediccionRF <- 1
prediccionSVM <- 3
prediccionNN <- 2
precisionNB = .5347
precisionRF = .9446
precisionSVM <- .9721
precisionNN <- .8976
predicciones <- c(prediccionNB, prediccionRF, prediccionSVM, prediccionNN)
precisiones <- c(precisionNB, precisionRF, precisionSVM, precisionNN)
resultados <- data.frame(predicciones, precisiones)
View(resultados)
?aggregate
precisiones
tabla <- aggregate(precisiones ~ predicciones, data = resultados, FUN = sum)
View(tabla)
prediccion_total <- tabla[tabla$precisiones == max(tabla$precisiones),]$predicciones
precision_total <- tabla[tabla$precisiones == max(tabla$precisiones),]$precisiones
precision_total <- tabla[tabla$precisiones == max(tabla$precisiones),]$precisiones / sum(tabla$precisiones)
runApp('Documentos/HdD/Curso VyA/AppNumeros/AppMNIST.R')
runApp('Documentos/HdD/Curso VyA/AppNumeros/AppMNIST.R')
runApp('Documentos/HdD/Curso VyA/AppNumeros/AppMNIST.R')
?round
runApp('Documentos/HdD/Curso VyA/AppNumeros/AppMNIST.R')
runApp('Documentos/HdD/Curso VyA/AppNumeros/AppMNIST.R')
runApp('Documentos/HdD/Curso VyA/AppNumeros/AppMNIST.R')
setwd("~/Documentos/HdD/Curso VyA/AppNumeros")
28*28
install.packages(c("shiny", "shinydashboard", "png", "caret", "e1071", "randomForest", "neuralnet"))
install.packages(c("shiny", "shinydashboard", "png", "caret", "e1071", "randomForest", "neuralnet"))
install.packages("shiny")
setwd("~/Documentos/HdD/Curso VyA/AppNumeros")
